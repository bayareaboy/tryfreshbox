{"ast":null,"code":"var _jsxFileName = \"/Users/mavlonbek/Desktop/startup/tryfreshbox/client/src/components/checkout/ConfirmForm.js\";\nimport React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Button } from \"react-bootstrap\";\nexport class ConfirmForm extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const _this$props$values = this.props.values,\n            firstName = _this$props$values.firstName,\n            lastName = _this$props$values.lastName,\n            mobile = _this$props$values.mobile,\n            address = _this$props$values.address,\n            deliveryTime = _this$props$values.deliveryTime,\n            produce = _this$props$values.produce;\n      const newOrder = {\n        firstName,\n        lastName,\n        mobile,\n        address,\n        deliveryTime,\n        produce\n      };\n\n      try {\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        const body = JSON.stringify(newOrder);\n        const res = await axios.post(\"/api/orders/submit\", body, config);\n      } catch (err) {\n        // toast.error(\"Something went wrong\", {\n        //   position: toast.POSITION.TOP_LEFT\n        // });\n        console.error(err);\n      }\n\n      toast.success(\"Proceeding to payment page\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n      this.continue();\n    };\n\n    this.continue = e => {\n      // e.preventDefault();\n      this.props.nextStep(); // this.onPayButtonClick();\n      // this.onHandleStripe();\n    };\n\n    this.back = e => {\n      e.preventDefault();\n      this.props.prevStep();\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      mobile: \"\",\n      address: \"\",\n      deliveryTime: \"\",\n      produce: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // api call to backend api/orders/submit\n    const _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          mobile = _this$state.mobile,\n          address = _this$state.address,\n          deliveryTime = _this$state.deliveryTime,\n          produce = _this$state.produce;\n    this.setState({\n      firstName: firstName,\n      lastName: lastName,\n      mobile: mobile,\n      address: address,\n      deliveryTime: deliveryTime,\n      produce: produce\n    });\n  }\n\n  render() {\n    const _this$props$values2 = this.props.values,\n          firstName = _this$props$values2.firstName,\n          lastName = _this$props$values2.lastName,\n          mobile = _this$props$values2.mobile,\n          address = _this$props$values2.address,\n          deliveryTime = _this$props$values2.deliveryTime,\n          produce = _this$props$values2.produce;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Confirm order details\"), React.createElement(\"form\", {\n      className: \"ui mini form\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      placeholder: firstName,\n      type: \"text\",\n      name: firstName,\n      value: firstName,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"input\", {\n      placeholder: lastName,\n      type: \"text\",\n      name: lastName,\n      value: lastName,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Mobile Number\"), React.createElement(\"input\", {\n      placeholder: mobile,\n      type: \"text\",\n      name: mobile,\n      value: mobile,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Delivery address\"), React.createElement(\"input\", {\n      placeholder: address,\n      type: \"text\",\n      name: address,\n      value: address,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Delivery time & day\"), React.createElement(\"input\", {\n      placeholder: deliveryTime,\n      type: \"text\",\n      name: deliveryTime,\n      value: deliveryTime,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Box type\"), React.createElement(\"input\", {\n      placeholder: produce,\n      type: \"text\",\n      name: produce,\n      value: produce,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      color: \"green\",\n      className: \"button button-secondary \" // onClick={this.continue}\n      // token={this.onHandleStripe}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Confirm and Pay\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Button // color=\"orange\"\n    , {\n      className: \"button button-primary \",\n      onClick: this.back,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Go back\")));\n  }\n\n}\nexport default ConfirmForm;","map":{"version":3,"sources":["/Users/mavlonbek/Desktop/startup/tryfreshbox/client/src/components/checkout/ConfirmForm.js"],"names":["React","Component","Fragment","axios","toast","Button","ConfirmForm","constructor","onSubmit","e","preventDefault","props","values","firstName","lastName","mobile","address","deliveryTime","produce","newOrder","config","headers","body","JSON","stringify","res","post","err","console","error","success","position","POSITION","TOP_LEFT","continue","nextStep","back","prevStep","state","componentDidMount","setState","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Button } from \"react-bootstrap\";\n\nexport class ConfirmForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      mobile: \"\",\n      address: \"\",\n      deliveryTime: \"\",\n      produce: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // api call to backend api/orders/submit\n\n    const {\n      firstName,\n      lastName,\n      mobile,\n      address,\n      deliveryTime,\n      produce\n    } = this.state;\n    this.setState({\n      firstName: firstName,\n      lastName: lastName,\n      mobile: mobile,\n      address: address,\n      deliveryTime: deliveryTime,\n      produce: produce\n    });\n  }\n  onSubmit = async e => {\n    e.preventDefault();\n    const {\n      values: { firstName, lastName, mobile, address, deliveryTime, produce }\n    } = this.props;\n    const newOrder = {\n      firstName,\n      lastName,\n      mobile,\n      address,\n      deliveryTime,\n      produce\n    };\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const body = JSON.stringify(newOrder);\n      const res = await axios.post(\"/api/orders/submit\", body, config);\n    } catch (err) {\n      // toast.error(\"Something went wrong\", {\n      //   position: toast.POSITION.TOP_LEFT\n      // });\n      console.error(err);\n    }\n    toast.success(\"Proceeding to payment page\", {\n      position: toast.POSITION.TOP_LEFT\n    });\n    this.continue();\n  };\n  continue = e => {\n    // e.preventDefault();\n    this.props.nextStep();\n    // this.onPayButtonClick();\n    // this.onHandleStripe();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const {\n      values: { firstName, lastName, mobile, address, deliveryTime, produce }\n    } = this.props;\n\n    return (\n      <Fragment>\n        <h4>Confirm order details</h4>\n        <form className=\"ui mini form\" onSubmit={this.onSubmit}>\n          <div className=\"field\">\n            <label>First name</label>\n            <input\n              placeholder={firstName}\n              type=\"text\"\n              name={firstName}\n              value={firstName}\n              required\n            />\n          </div>\n          <div className=\"field\">\n            <label>Last name</label>\n            <input\n              placeholder={lastName}\n              type=\"text\"\n              name={lastName}\n              value={lastName}\n              required\n            />\n          </div>\n          <div className=\"field\">\n            <label>Mobile Number</label>\n            <input\n              placeholder={mobile}\n              type=\"text\"\n              name={mobile}\n              value={mobile}\n              required\n            />\n          </div>\n          <div className=\"field\">\n            <label>Delivery address</label>\n            <input\n              placeholder={address}\n              type=\"text\"\n              name={address}\n              value={address}\n              required\n            />\n          </div>\n          <div className=\"field\">\n            <label>Delivery time & day</label>\n            <input\n              placeholder={deliveryTime}\n              type=\"text\"\n              name={deliveryTime}\n              value={deliveryTime}\n              required\n            />\n          </div>\n          <div className=\"field\">\n            <label>Box type</label>\n            <input\n              placeholder={produce}\n              type=\"text\"\n              name={produce}\n              value={produce}\n              required\n            />\n          </div>\n          <button\n            color=\"green\"\n            className=\"button button-secondary \"\n            // onClick={this.continue}\n            // token={this.onHandleStripe}\n          >\n            Confirm and Pay\n          </button>\n          <br />\n          <Button\n            // color=\"orange\"\n\n            className=\"button button-primary \"\n            onClick={this.back}\n          >\n            Go back\n          </Button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nexport default ConfirmForm;\n"]},"metadata":{},"sourceType":"module"}