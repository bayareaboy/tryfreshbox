{"ast":null,"code":"import _slicedToArray from \"/Users/mavlonbek/Desktop/startup/tryfreshbox/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mavlonbek/Desktop/startup/tryfreshbox/client/src/components/checkout/payments/PaymentsLarge.js\";\nimport React, { useState } from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 8000,\n  draggable: false //etc you get the idea\n\n});\nexport default function PaymentPage() {\n  const _useState = useState({\n    name: \"Freshbox Medium\",\n    price: 25,\n    description: \"Great\"\n  }),\n        _useState2 = _slicedToArray(_useState, 1),\n        product = _useState2[0];\n\n  async function handleToken(token, addresses) {\n    const response = await axios.post(\"/api/orders/checkout\", {\n      token,\n      product\n    });\n    const status = response.data.status;\n    console.log(\"Response:\", response.data);\n\n    if (status === \"success\") {\n      toast.success(\"Payment Successful! Receipt is sent to your email.\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n    } else {\n      toast.error(\"Something went wrong\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mt-150 mb-150 mr-50 ml-50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Pay with Credit Card\"), React.createElement(StripeCheckout, {\n    stripeKey: \"pk_test_0u5HEdSaV8pLMOhgg1PhKmVZ00YlBgGg8J\",\n    token: handleToken,\n    amount: product.price * 100,\n    name: product.name,\n    billingAddress: true,\n    shippingAddress: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/mavlonbek/Desktop/startup/tryfreshbox/client/src/components/checkout/payments/PaymentsLarge.js"],"names":["React","useState","StripeCheckout","axios","toast","configure","autoClose","draggable","PaymentPage","name","price","description","product","handleToken","token","addresses","response","post","status","data","console","log","success","position","POSITION","TOP_LEFT","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AAEAA,KAAK,CAACC,SAAN,CAAgB;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,SAAS,EAAE,KAFG,CAGd;;AAHc,CAAhB;AAMA,eAAe,SAASC,WAAT,GAAuB;AAAA,oBAClBP,QAAQ,CAAC;AACzBQ,IAAAA,IAAI,EAAE,iBADmB;AAEzBC,IAAAA,KAAK,EAAE,EAFkB;AAGzBC,IAAAA,WAAW,EAAE;AAHY,GAAD,CADU;AAAA;AAAA,QAC7BC,OAD6B;;AAMpC,iBAAeC,WAAf,CAA2BC,KAA3B,EAAkCC,SAAlC,EAA6C;AAC3C,UAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAW,sBAAX,EAAmC;AACxDH,MAAAA,KADwD;AAExDF,MAAAA;AAFwD,KAAnC,CAAvB;AAD2C,UAKnCM,MALmC,GAKxBF,QAAQ,CAACG,IALe,CAKnCD,MALmC;AAM3CE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,QAAQ,CAACG,IAAlC;;AACA,QAAID,MAAM,KAAK,SAAf,EAA0B;AACxBd,MAAAA,KAAK,CAACkB,OAAN,CAAc,oDAAd,EAAoE;AAClEC,QAAAA,QAAQ,EAAEnB,KAAK,CAACoB,QAAN,CAAeC;AADyC,OAApE;AAGD,KAJD,MAIO;AACLrB,MAAAA,KAAK,CAACsB,KAAN,CAAY,sBAAZ,EAAoC;AAClCH,QAAAA,QAAQ,EAAEnB,KAAK,CAACoB,QAAN,CAAeC;AADS,OAApC;AAGD;AACF;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,KAAK,EAAEZ,WAFT;AAGE,IAAA,MAAM,EAAED,OAAO,CAACF,KAAR,GAAgB,GAH1B;AAIE,IAAA,IAAI,EAAEE,OAAO,CAACH,IAJhB;AAKE,IAAA,cAAc,MALhB;AAME,IAAA,eAAe,MANjB;AAOE,IAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF,CADF;AAoBD","sourcesContent":["import React, { useState } from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure({\n  autoClose: 8000,\n  draggable: false\n  //etc you get the idea\n});\n\nexport default function PaymentPage() {\n  const [product] = useState({\n    name: \"Freshbox Medium\",\n    price: 25,\n    description: \"Great\"\n  });\n  async function handleToken(token, addresses) {\n    const response = await axios.post(\"/api/orders/checkout\", {\n      token,\n      product\n    });\n    const { status } = response.data;\n    console.log(\"Response:\", response.data);\n    if (status === \"success\") {\n      toast.success(\"Payment Successful! Receipt is sent to your email.\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n    } else {\n      toast.error(\"Something went wrong\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n    }\n  }\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"mt-150 mb-150 mr-50 ml-50\">\n          <center>\n            <h4>Pay with Credit Card</h4>\n            <StripeCheckout\n              stripeKey=\"pk_test_0u5HEdSaV8pLMOhgg1PhKmVZ00YlBgGg8J\"\n              token={handleToken}\n              amount={product.price * 100}\n              name={product.name}\n              billingAddress\n              shippingAddress\n              required\n            />\n          </center>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}